namespace DesignPatternCodeGenerator.Tests.NullObject.Data;

public static class NullObjectCompilationSources
{
    public static IEnumerable<object[]> GetSampleDataToClassTests()
    {
        yield return new object[] { _inputSourcePropertyVoidAndNotVoid, _outputSourcePropertyVoidAndNotVoid };
        yield return new object[] { _inputSourcePropertyVoid, _outputSourcePropertyVoid };
        yield return new object[] { _inputSourceProperty, _outputSourceProperty };
        yield return new object[] { _inputSourceEmpty, _outputSourceEmpty };
    }

    public static IEnumerable<object[]> GetSampleDataToGeneratorTests()
    {
        yield return new object[] { _inputSourcePropertyVoidAndNotVoid };
        yield return new object[] { _inputSourcePropertyVoid };
        yield return new object[] { _inputSourceProperty };
        yield return new object[] { _inputSourceEmpty };
    }

    private readonly static string _outputSourceEmpty =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject
{
    public class LogNullObject : ILog
    {
    }
}";

    private readonly static string _outputSourceProperty=
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject
{
    public class LogNullObject : ILog
    {
        public int Id { get; set; }
    }
}";

    private readonly static string _outputSourcePropertyVoid =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject
{
    public class LogNullObject : ILog
    {
        public int Id { get; set; }

        public void Info(string message) { }
        public void Warn(string message) { }
    }
}";

    private readonly static string _outputSourcePropertyVoidAndNotVoid =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject
{
    public class LogNullObject : ILog
    {
        public int Id { get; set; }

        public void Info(string message) { }
        public void Warn(string message) { }
        public string Login(string username, string password)
        {
            return default(string);
        }
    }
}";

    private readonly static string _inputSourceEmpty =
        @"using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject;

[NullObject]
public interface ILog
{
}";

    private readonly static string _inputSourceProperty =
        @"using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject;

[NullObject]
public interface ILog
{
    public int Id { get; set; }
}";

    private readonly static string _inputSourcePropertyVoid =
        @"using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject;

[NullObject]
public interface ILog
{
    public int Id { get; set; }
    public void Info(string message);
    public void Warn(string message);
}";

    private readonly static string _inputSourcePropertyVoidAndNotVoid =
        @"using DesignPatternCodeGenerator.Attributes.NullObject;

namespace Samples.NullObject;

[NullObject]
public interface ILog
{
    public int Id { get; set; }
    public string Login(string username, string password);
    public void Info(string message);
    public void Warn(string message);
}";
}
