namespace DesignPatternCodeGenerator.Tests.Singleton.Data;

public static class SingletonCompilationSources
{
    public static IEnumerable<object[]> GetSampleDataToClassTests()
    {
        yield return new object[] { _inputSourceWithoutProperty, _outputSource };
        yield return new object[] { _inputSourceWithtProperty, _outputSource };
    }

    public static IEnumerable<object[]> GetSampleDataToGeneratorTests()
    {
        yield return new object[] { _inputSourceWithoutProperty };
        yield return new object[] { _inputSourceWithtProperty };
    }

    private static readonly string _inputSourceWithoutProperty =
        @"using DesignPatternCodeGenerator.Attributes.Singleton;
using System;

namespace Test.Test
{
    [Singleton]
    public partial class Test { }

}";

    private static readonly string _inputSourceWithtProperty =
        @"using DesignPatternCodeGenerator.Attributes.Singleton;
using System;

namespace Test.Test
{
    [Singleton]
    public partial class Test 
    { 
        public string Property { get; set; }
    }

}";

    private static readonly string _outputSource =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Singleton;
using System;

namespace Test.Test
{
    public partial class Test
    {
        private static Test _instance = null;
        private static object obj = new object();

        private Test() { }

        public static Test GetInstance()
        {
            lock(obj)
            {
                if (_instance == null)
                {
                    _instance = new Test();
                }
            }
            return _instance;
        }        
    }
}";
}
