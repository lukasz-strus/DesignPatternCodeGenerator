using DesignPatternCodeGenerator.Base.Enums;
using DesignPatternCodeGenerator.Base.Generators;
using DesignPatternCodeGenerator.Tests.Helpers;
using FluentAssertions;
using Xunit;

namespace DesignPatternCodeGenerator.Tests.Base.Generators;

public class BaseCodeGeneratorTests
{
    [Theory]
    [InlineData(FACTORY_COMPILATION_SOURCE, USINGS_AND_NAMESPACES)]
    public void GenerateUsingsAndNamespace_ForValidInputs_ReturnsCorrectString(string source, string expected)
    {
        var interfaceGroup = GeneratorTestsHelper.GetInterfaceGroup(source);

        var result = BaseCodeGenerator.GenerateUsingsAndNamespace(interfaceGroup);

        result.Should().Be(expected);
    }

    private const string FACTORY_COMPILATION_SOURCE =
    @"using System;

namespace Test.Test
{

    [Factory]
    public interface ITest
    {

    }

    [FactoryProduct]
    public class Test : ITest
    {

    }
}";

    private const string USINGS_AND_NAMESPACES = "// <auto-generated/>\r\nusing System;\r\n\r\nnamespace Test.Test";

    private const string INTERFACE_DECLARATION = "public interface ITest";

    private const string CLASS_DECLARATION = "public class Test: ITest";

    private const string ENUM_DECLARATION = "public enum TestType";
}
