namespace DesignPatternCodeGenerator.Tests.Prototype.Data;

public static class PrototypeCompilationSources
{
    public static IEnumerable<object[]> GetSampleDataToClassTests()
    {
        yield return new object[] { _inputSourceWithOneProperty, _outputSourceWithOneProperty };
        yield return new object[] { _inputSourceWithTwoProperty, _outputSourceWithTwoProperty };
        yield return new object[] { _inputSourceWithTwoPropertyAndOnePropertyClass, _outputSourceWithTwoPropertyAndOnePropertyClass };
        yield return new object[] { _inputSourceWithTwoPropertyAndTwoPropertyClass, _outputSourceWithTwoPropertyAndTwoPropertyClass };
    }

    public static IEnumerable<object[]> GetSampleDataToGeneratorTests()
    {
        yield return new object[] { _inputSourceWithOneProperty };
        yield return new object[] { _inputSourceWithTwoProperty };
        yield return new object[] { _inputSourceWithTwoPropertyAndOnePropertyClass };
        yield return new object[] { _inputSourceWithTwoPropertyAndTwoPropertyClass };
    }

    public static IEnumerable<object[]> GetSampleDataToDeepMethodTests()
    {
        yield return new object[] { _inputSourceWithOneProperty, _outputSourceDeepMethodWithOneProperty };
        yield return new object[] { _inputSourceWithTwoProperty, _outputSourceDeepMethodWithTwoProperty };
        yield return new object[] { _inputSourceWithTwoPropertyAndOnePropertyClass, _outputSourceDeepMethodWithTwoPropertyAndOnePropertyClass };
        yield return new object[] { _inputSourceWithTwoPropertyAndTwoPropertyClass, _outputSourceDeepMethodWithTwoPropertyAndTwoPropertyClass };
    }

    public static IEnumerable<object[]> GetSampleDataToShallowMethodTests()
    {
        yield return new object[] { _inputSourceWithOneProperty, _outputSourceShallowClone };
        yield return new object[] { _inputSourceWithTwoProperty, _outputSourceShallowClone };
        yield return new object[] { _inputSourceWithTwoPropertyAndOnePropertyClass, _outputSourceShallowClone };
        yield return new object[] { _inputSourceWithTwoPropertyAndTwoPropertyClass, _outputSourceShallowClone };
    }

    private static readonly string _inputSourceWithOneProperty =
        @"using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{
    [Prototype]
    public partial class Person 
    { 
        public string Name {get; set;}
    }
}";

    private static readonly string _inputSourceWithTwoProperty =
        @"using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{
    [Prototype]
    public partial class Person 
    { 
        public string Name {get; set;}
        public string LastName {get; set;}
    }
}";

    private static readonly string _inputSourceWithTwoPropertyAndOnePropertyClass =
        @"using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{
    [Prototype]
    public partial class Person 
    { 
        public string Name {get; set;}
        public string LastName {get; set;}        
        public Address? PersonAddress {get; set;}
    }

    public class Address
    {
        public string City { get; set; }
        public string Street { get; set; }
    }
}";

    private static readonly string _inputSourceWithTwoPropertyAndTwoPropertyClass =
        @"using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{
    [Prototype]
    public partial class Person 
    { 
        public string Name {get; set;}
        public string LastName {get; set;}        
        public Address? PersonAddress {get; set;}
        public Contacts? PersonContacts { get; set; }
    }

    public class Address
    {
        public string City { get; set; }
        public string Street { get; set; }
    }

    public class Contacts
    {
        public string? PhoneNumber { get; set; }
        public string? Email { get; set; }
    }
}";

    private static readonly string _outputSourceWithOneProperty =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{    
    public partial class Person 
    { 
        public Person ShallowCopy()
        {            
            return (Person)this.MemberwiseClone();
        }

        public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();

            return clone;
        }
    }
}";

    private static readonly string _outputSourceWithTwoProperty =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{    
    public partial class Person 
    { 
        public Person ShallowCopy()
        {            
            return (Person)this.MemberwiseClone();
        }

        public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();

            return clone;
        }
    }
}";

    private static readonly string _outputSourceWithTwoPropertyAndOnePropertyClass =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{    
    public partial class Person 
    { 
        public Person ShallowCopy()
        {            
            return (Person)this.MemberwiseClone();
        }

        public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();
            
            clone.PersonAddress = new Address()
            {
                City = PersonAddress.City,
                Street = PersonAddress.Street
            };

            return clone;
        }
    }
}";

    private static readonly string _outputSourceWithTwoPropertyAndTwoPropertyClass =
        @"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Prototype;

namespace Test.Test
{    
    public partial class Person 
    { 
        public Person ShallowCopy()
        {            
            return (Person)this.MemberwiseClone();
        }

        public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();
            
            clone.PersonAddress = new Address()
            {
                City = PersonAddress.City,
                Street = PersonAddress.Street
            };

			clone.PersonContacts = new Contacts()
            {
                PhoneNumber = PersonContacts.PhoneNumber,
				Email = PersonContacts.Email
            };

            return clone;
        }
    }
}";

    private static readonly string _outputSourceDeepMethodWithOneProperty =
        @"public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();            

            return clone;
        }";

    private static readonly string _outputSourceDeepMethodWithTwoProperty =
        @"public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();            

            return clone;
        }";

    private static readonly string _outputSourceDeepMethodWithTwoPropertyAndOnePropertyClass =
        @"public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();

            clone.PersonAddress = new Address()
            {
                City = PersonAddress.City,
				Street = PersonAddress.Street
            };

            return clone;
        }";

    private static readonly string _outputSourceDeepMethodWithTwoPropertyAndTwoPropertyClass =
        @"public Person DeepCopy()
        {
            Person clone = (Person)this.MemberwiseClone();

            clone.PersonAddress = new Address()
            {
                City = PersonAddress.City,
				Street = PersonAddress.Street
            };

			clone.PersonContacts = new Contacts()
            {
                PhoneNumber = PersonContacts.PhoneNumber,
				Email = PersonContacts.Email
            };

            return clone;
        }";

    private static readonly string _outputSourceShallowClone =
        @"public Person ShallowCopy()
        {
            return (Person)this.MemberwiseClone();
        }";
}
