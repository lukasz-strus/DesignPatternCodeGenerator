using DesignPatternCodeGenerator.AbstractFactory;
using DesignPatternCodeGenerator.Tests.Helpers;
using FluentAssertions;
using Xunit;

namespace DesignPatternCodeGenerator.Tests.AbstractFactory;

public class AbstractFactoryContentGeneratorTests
{
    [Theory]
    [InlineData(INPUT_SOURCE_CODE, EXPECTED_MAIN_INTERFACE)]
    internal void GenerateMainInterface_ForValidInputs_ReturnsCorrectMainInterface(string inputSource, string expectedInterface)
    {
        var interfaceGroup = GeneratorTestsHelper.GetInterfaceGroups(inputSource);

        var result = AbstractFactoryContentGenerator.GenerateMainInterface(interfaceGroup);

        //result.RemoveWhitespace().Should().Be(expectedInterface.RemoveWhitespace());

        //result.Should().Be(expectedInterface);
    }


    private const string INPUT_SOURCE_CODE =
@"using DesignPatternCodeGenerator.Attributes.AbstractFactory;
using System;

namespace Test.Test
{
    [AbstractFactory(""UIElement"")]
    public interface ITextBox
    {
        void Render();
        void HandleInput();
    }

    [AbstractFactoryChild(""Windows"")]
    public class WindowsTextBox : ITextBox
    {
        public void HandleInput()
        {
            Console.WriteLine(""Handle windows text input"");
        }

        public void Render()
        {
            Console.WriteLine(""Render windows textbox"");
        }
    }

    [AbstractFactoryChild(""Mac"")]
    public class MacTextBox : ITextBox
    {
        public void HandleInput()
        {
            Console.WriteLine(""Handle mac text input"");
        }

        public void Render()
        {
            Console.WriteLine(""Render mac textbox"");
        }
    }

    [AbstractFactory(""UIElement"")]
    public interface IButton
    {
        void Render();
        void HandleClick();
    }

    [AbstractFactoryChild(""Windows"")]
    public class WindowsButton : IButton
    {
        public void HandleClick()
        {
            Console.WriteLine(""Handle windows click event"");
        }

        public void Render()
        {
            Console.WriteLine(""Render windows button"");
        }
    }

    [AbstractFactoryChild(""Mac"")]
    public class MacButton : IButton
    {
        public void HandleClick()
        {
            Console.WriteLine(""Handle mac click event"");
        }

        public void Render()
        {
            Console.WriteLine(""Render mac button"");
        }
    }
}";

    private const string EXPECTED_MAIN_INTERFACE =
@"// <auto-generated/>
using System;

namespace Test.Test
{
    public interface IUIElementFactory
    {        
        ITextBox CreateTextBox();
        IButton CreateButton();
    }
}";

    private const string EXPECTE_CLASSES =
@"// <auto-generated/>
using System;

namespace Test.Test
{
    public class MacFactory : IUIElementFactory
    {
        public IButton CreateButton()
        {
            return new MacButton();
        }

        public ITextBox CreateTextBox()
        {
            return new MacTextBox();
        }
    }

    public class WindowsFactory : IUIElementFactory
    {
        public IButton CreateButton()
        {
            return new WindowsButton();
        }

        public ITextBox CreateTextBox()
        {
            return new WindowsTextBox();
        }
    }
}
";
}
