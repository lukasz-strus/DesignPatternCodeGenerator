namespace DesignPatternCodeGenerator.Tests.Facade.Data;

public static class FacadeCompilationSources
{
    public static IEnumerable<object[]> GetSampleDataToFieldsTests()
    {
        yield return new object[] { _inputSourceOneClass, _outputSourceFieldOneClasses };
        yield return new object[] { _inputSourceTwoClasses, _outputSourceFieldTwoClasses };
        yield return new object[] { _inputSourceThreeClasses, _outputSourceFieldThreeClasses };
        yield return new object[] { _inputSourceFourClasses, _outputSourceFieldFourClasses };
    }

    public static IEnumerable<object[]> GetSampleDataToMethodTests()
    {
        yield return new object[] { _inputSourceOneClass, _outputSourceMethodOneClasses };
        yield return new object[] { _inputSourceTwoClasses, _outputSourceMethodTwoClasses };
        yield return new object[] { _inputSourceThreeClasses, _outputSourceMethodThreeClasses };
        yield return new object[] { _inputSourceFourClasses, _outputSourceMethodFourClasses };
    }

    public static IEnumerable<object[]> GetSampleDataToContentTests()
    {
        yield return new object[] { _inputSourceOneClass, _outputSourceContentOneClasses };
        yield return new object[] { _inputSourceTwoClasses, _outputSourceContentTwoClasses };
        yield return new object[] { _inputSourceThreeClasses, _outputSourceContentThreeClasses };
        yield return new object[] { _inputSourceFourClasses, _outputSourceContentFourClasses };
    }

    public static IEnumerable<object[]> GetSampleDataToGeneratorTests()
    {
        yield return new object[] { _inputSourceOneClass };
        yield return new object[] { _inputSourceTwoClasses };
        yield return new object[] { _inputSourceThreeClasses };
        yield return new object[] { _inputSourceFourClasses };
    }

    private static readonly string _outputSourceContentOneClasses =
@"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class ScanFacade
    {
        private QualityScanner _qualityScanner = new QualityScanner();

        public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
        }
    }
}";

    private static readonly string _outputSourceContentTwoClasses =
@"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class ScanFacade
    {
        private QualityScanner _qualityScanner = new QualityScanner();
	    private DependencyScanner _dependencyScanner = new DependencyScanner();

        public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
        }
    }
}";

    private static readonly string _outputSourceContentThreeClasses =
@"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class ScanFacade
    {
        private QualityScanner _qualityScanner = new QualityScanner();
	    private DependencyScanner _dependencyScanner = new DependencyScanner();
	    private SecurityScanner _securityScanner = new SecurityScanner();

        public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
		    var securityScannerSecurityScan = _securityScanner.SecurityScan(githubUrl);
        }
    }
}";

    private static readonly string _outputSourceContentFourClasses =
@"// <auto-generated/>
using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class ScanFacade
    {
        private QualityScanner _qualityScanner = new QualityScanner();
	    private DependencyScanner _dependencyScanner = new DependencyScanner();
	    private SecurityScanner _securityScanner = new SecurityScanner();
	    private ReportGenerator _reportGenerator = new ReportGenerator();

        public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
		    var securityScannerSecurityScan = _securityScanner.SecurityScan(githubUrl);

		    _reportGenerator.GenerateReport(qualityScannerQualityScan, securityScannerSecurityScan, dependencyScannerDependencyScan);            
        }
    }
}";

    private static readonly string _outputSourceMethodOneClasses =
      @"public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
        }";

    private static readonly string _outputSourceMethodTwoClasses =
      @"public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
        }";

    private static readonly string _outputSourceMethodThreeClasses =
      @"public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
		    var securityScannerSecurityScan = _securityScanner.SecurityScan(githubUrl);
        }";

    private static readonly string _outputSourceMethodFourClasses =
      @"public void Scan(string githubUrl)
        {
            var qualityScannerQualityScan = _qualityScanner.QualityScan(githubUrl);
		    var dependencyScannerDependencyScan = _dependencyScanner.DependencyScan(githubUrl);
		    var securityScannerSecurityScan = _securityScanner.SecurityScan(githubUrl);

		    _reportGenerator.GenerateReport(qualityScannerQualityScan, securityScannerSecurityScan, dependencyScannerDependencyScan);
        }";

    private static readonly string _outputSourceFieldOneClasses =
    @"private QualityScanner _qualityScanner = new QualityScanner();";

    private static readonly string _outputSourceFieldTwoClasses =
    @"private QualityScanner _qualityScanner = new QualityScanner();
        private DependencyScanner _dependencyScanner = new DependencyScanner();";

    private static readonly string _outputSourceFieldThreeClasses =
    @"private QualityScanner _qualityScanner = new QualityScanner();
        private DependencyScanner _dependencyScanner = new DependencyScanner();
	    private SecurityScanner _securityScanner = new SecurityScanner();";

    private static readonly string _outputSourceFieldFourClasses =
    @"private QualityScanner _qualityScanner = new QualityScanner();
        private DependencyScanner _dependencyScanner = new DependencyScanner();
	    private SecurityScanner _securityScanner = new SecurityScanner();
	    private ReportGenerator _reportGenerator = new ReportGenerator();";

    private static readonly string _inputSourceOneClass =
@"using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class QualityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> QualityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Quality scan"");

            return new List<string>() { ""Error1"", ""Error2"" };
        }
    }
}";

    private static readonly string _inputSourceTwoClasses =
@"using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class QualityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> QualityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Quality scan"");

            return new List<string>() { ""Error1"", ""Error2"" };
        }
    }

    public class DependencyScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> DependencyScan([FacadeMainParameter(""githubUrl"")]string githubUrl)
        {
            Console.WriteLine(""Dependency Scan"");

            return new List<string>() { ""Dependency Error1"" };
        }
    }
}";

    private static readonly string _inputSourceThreeClasses =
@"using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class QualityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> QualityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Quality scan"");

            return new List<string>() { ""Error1"", ""Error2"" };
        }
    }

    public class DependencyScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> DependencyScan([FacadeMainParameter(""githubUrl"")]string githubUrl)
        {
            Console.WriteLine(""Dependency Scan"");

            return new List<string>() { ""Dependency Error1"" };
        }
    }

    public class SecurityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> SecurityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Security scan"");

            return new List<string>() { ""security error1"" };
        }
    }
}";

    private static readonly string _inputSourceFourClasses =
@"using DesignPatternCodeGenerator.Attributes.Facade;
using System;

namespace Test.Test
{
    public class QualityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> QualityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Quality scan"");

            return new List<string>() { ""Error1"", ""Error2"" };
        }
    }

    public class DependencyScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> DependencyScan([FacadeMainParameter(""githubUrl"")]string githubUrl)
        {
            Console.WriteLine(""Dependency Scan"");

            return new List<string>() { ""Dependency Error1"" };
        }
    }

    public class SecurityScanner
    {
        [FacadeMethod(""Scan"")]
        public IEnumerable<string> SecurityScan([FacadeMainParameter(""githubUrl"")] string githubUrl)
        {
            Console.WriteLine(""Security scan"");

            return new List<string>() { ""security error1"" };
        }
    }

    public class ReportGenerator
    {
        [FacadeMethod(""Scan"")]
        public void GenerateReport(
            [FacadeParameter(""QualityScanner.QualityScan"")] IEnumerable<string> qualityScanErrors,
            [FacadeParameter(""SecurityScanner.SecurityScan"")] IEnumerable<string> securityScanErrors,
            [FacadeParameter(""DependencyScanner.DependencyScan"")] IEnumerable<string> dependencyScanErrors)
        {
            Console.WriteLine(""Quality Scan Errors:"");
            Console.WriteLine(string.Join("", "", qualityScanErrors));

            Console.WriteLine(""Security Scan Errors:"");
            Console.WriteLine(string.Join("", "", securityScanErrors));

            Console.WriteLine(""Dependency Scan Errors:"");
            Console.WriteLine(string.Join("", "", dependencyScanErrors));
        }
    }
}";
}
